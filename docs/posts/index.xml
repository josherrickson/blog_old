<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Josh Errickson</title>
    <link>http://errickson.net/blog/posts/</link>
    <description>Recent content in Blog on Josh Errickson</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Nov 2023 21:28:51 -0500</lastBuildDate>
    <atom:link href="http://errickson.net/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Displaying R Version on Launch</title>
      <link>http://errickson.net/blog/posts/r-version-on-launch/</link>
      <pubDate>Sun, 26 Nov 2023 21:28:51 -0500</pubDate>
      <guid>http://errickson.net/blog/posts/r-version-on-launch/</guid>
      <description>I&amp;rsquo;ve started using rig to manage my R versions, since I need both current and development versions. I wanted a way to keep track of which version of R was currently running. I started with a simple cat call in my .Rprofile, but that caused issues occasionally.
Instead, the answer is to use message(). E.g.,
1 2 message(paste0(&amp;#34;Version: &amp;#34;, version$major, &amp;#34;.&amp;#34;, version$minor, &amp;#34; &amp;#34;, version$status)) Note that this is not affected by the --quiet flag, so R --quiet will suppress the long R startup message while still displaying your custom message.</description>
    </item>
    <item>
      <title>Fixing colors in Emacs themes in tmux</title>
      <link>http://errickson.net/blog/posts/emacs-tmux-themes/</link>
      <pubDate>Sat, 14 Oct 2023 20:12:30 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/emacs-tmux-themes/</guid>
      <description>For years I&amp;rsquo;ve struggled with certain themes in Emacs having incorrect colors when run in the terminal (emacs -nw) but appearing correct in GUI Emacs. Finally found a solution - the issue was with tmux. The fix for me was to include this in my .tmux.conf:
set -g default-terminal &amp;#39;screen-256color&amp;#39; set -ga terminal-overrides &amp;#39;,*256col*:Tc&amp;#39; This comes from https://github.com/alacritty/alacritty/issues/109#issuecomment-440353106. There are a number of other similar suggested fixes in that thread if this doesn&amp;rsquo;t work.</description>
    </item>
    <item>
      <title>Hooks for loading R packages</title>
      <link>http://errickson.net/blog/posts/r-package-hooks/</link>
      <pubDate>Fri, 13 Oct 2023 12:03:27 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/r-package-hooks/</guid>
      <description>The setHook function can be used to add hooks when loading (or unloading) R packages. For example, to update my previous post about replacing the yesno function in devtools can be improved by using hooks. The version in the original post loaded devtools in every R session. By using hooks, the change to yesno takes place anytime devtools is loaded, but does not require devtools loaded in every R session.</description>
    </item>
    <item>
      <title>Stopping `fill-paragraph` from breaking Stata inline dynamics tags</title>
      <link>http://errickson.net/blog/posts/emacs-fill-paragraph-stata-dynamic-tags/</link>
      <pubDate>Tue, 22 Aug 2023 05:56:45 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/emacs-fill-paragraph-stata-dynamic-tags/</guid>
      <description>Stata inline dynamic tags contain spaces. E.g. &amp;lt;&amp;lt;dd_display: %9.3f abs(_b[2.rep78])&amp;gt;&amp;gt;. This means that when using fill-paragraph, the inline tag can be broken, which Stata&amp;rsquo;s dyndoc and dyntext commands will break on.
This snippet to include in your Emacs init file fixes this issue.
(defun my-in-dd-display () &amp;#34;Don&amp;#39;t break lines in Inline Stata Dynamic Tags.&amp;#34; (save-excursion (save-match-data (and (re-search-backward &amp;#34;&amp;gt;&amp;gt;\\|\\(&amp;lt;&amp;lt;dd_display:\\)&amp;#34; (line-beginning-position) t) (match-beginning 1))))) (add-hook &amp;#39;fill-nobreak-predicate #&amp;#39;my-in-dd-display) After defining the function with defun, the add-hook function is what enables it&amp;rsquo;s use with fill-paragraph.</description>
    </item>
    <item>
      <title>Making a bibliography fit on one page in Beamer through Quarto</title>
      <link>http://errickson.net/blog/posts/quarto-beamer-bibliography-size/</link>
      <pubDate>Mon, 31 Jul 2023 11:54:18 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/quarto-beamer-bibliography-size/</guid>
      <description>When using Quarto, you can add a bibliography with something like
### References ::: {#refs} ::: https://quarto.org/docs/authoring/footnotes-and-citations.html#bibliography-generation
However, if producing slides via Beamer, the number of references can cause the text to run off the slide. You can use the shrink option to automatically reduce the font size to fit everything, or the allowframebreaks option to split the bibliography onto multiple pages.
### References {shrink=5} ::: {#refs} ::: The numeric argument of shrink is the minimum shrink size - making it too high can yield strange results, so start with it small and increase if necessary.</description>
    </item>
    <item>
      <title>Making TextEdit start with a Blank Document</title>
      <link>http://errickson.net/blog/posts/textedit_new_document/</link>
      <pubDate>Thu, 01 Jun 2023 14:19:07 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/textedit_new_document/</guid>
      <description>It used to be that launching OSX&amp;rsquo;s TextEdit would open a blank document for immediate typing/pasting. At some point over the last several years, it changed to show a file picked by default.
To switch to the older functionality, run the following terminal command:
defaults write com.apple.TextEdit NSShowAppCentricOpenPanelInsteadOfUntitledFile -bool false Source: https://apple.stackexchange.com/a/111755</description>
    </item>
    <item>
      <title>Move N= in Stata 18&#39;s `dtable`</title>
      <link>http://errickson.net/blog/posts/stata18_dtable_move_samplesize/</link>
      <pubDate>Wed, 31 May 2023 09:46:01 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/stata18_dtable_move_samplesize/</guid>
      <description>By default, the dtable command places the sample size in its own row:
. sysuse auto, clear (1978 automobile data) . dtable mpg, by(foreign) ---------------------------------------------------------- Car origin Domestic Foreign Total ---------------------------------------------------------- N 52 (70.3%) 22 (29.7%) 74 (100.0%) Mileage (mpg) 19.827 (4.743) 24.773 (6.611) 21.297 (5.786) ---------------------------------------------------------- We can use the following two additional options to relocate it:
. dtable mpg, by(foreign) /// &amp;gt; sample(, statistics(freq) place(seplabels)) /// &amp;gt; sformat(&amp;#34;(N=%s)&amp;#34; frequency) ---------------------------------------------------------- Car origin Domestic Foreign Total (N=52) (N=22) (N=74) ---------------------------------------------------------- Mileage (mpg) 19.</description>
    </item>
    <item>
      <title>Category-wise comparisons in Stata 18&#39;s `dtable`</title>
      <link>http://errickson.net/blog/posts/stata18_dtable_category_compare/</link>
      <pubDate>Thu, 04 May 2023 20:29:55 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/stata18_dtable_category_compare/</guid>
      <description>Stata 18&amp;rsquo;s new dtable is terrific for creating a &amp;ldquo;Table 1&amp;rdquo;, but by default if provided a categorical variable and asked to test for differences by group, it will provide a single Chi-sq test by default.
. sysuse auto, clear (1978 automobile data) . dtable i.rep78, by(foreign, tests) note: using test pearson across levels of foreign for rep78. ----------------------------------------------------------- Car origin Domestic Foreign Total Test ----------------------------------------------------------- N 52 (70.3%) 22 (29.</description>
    </item>
    <item>
      <title>R&#39;s sys.call vs match.call</title>
      <link>http://errickson.net/blog/posts/syscall_vs_matchcall/</link>
      <pubDate>Sat, 29 Apr 2023 10:17:10 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/syscall_vs_matchcall/</guid>
      <description>The sys.call() function returns the exact call to the function.
The match.call() function names all arguments and orders them as appropriate.
1 2 3 4 5 f &amp;lt;- function(x, y = 2) { print(paste(&amp;#34;sys.call():&amp;#34;, deparse(sys.call()))) print(paste(&amp;#34;match.call():&amp;#34;, deparse(match.call()))) invisible(TRUE) } This results in:
1 2 3 4 5 6 7 8 9 &amp;gt; f(1, 2) [1] &amp;#34;sys.call(): f(1, 2)&amp;#34; [1] &amp;#34;match.call(): f(x = 1, y = 2)&amp;#34; &amp;gt; f(y = 2, x = 1) [1] &amp;#34;sys.</description>
    </item>
    <item>
      <title>R&#39;s `all.equal`, relative vs absolute</title>
      <link>http://errickson.net/blog/posts/all.equal-scale-difference/</link>
      <pubDate>Thu, 06 Apr 2023 10:29:25 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/all.equal-scale-difference/</guid>
      <description>The all.equal() function is useful to comparing whether two numeric objects are equivalent, but it has a weird quirk.
1 2 &amp;gt; all.equal(4, 5) [1] &amp;#34;Mean relative difference: 0.25&amp;#34; You might expect that the difference should be 1. But note the &amp;ldquo;relative difference.&amp;rdquo; The default for all.equal is to report the difference for a call of all.equal(x, y) as |x - y|/x. This also means that all.equal(x, y) is not going to report the same difference as all.</description>
    </item>
    <item>
      <title>Character-wise String Comparison in R</title>
      <link>http://errickson.net/blog/posts/characterwise-string-comparison/</link>
      <pubDate>Wed, 29 Mar 2023 06:05:44 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/characterwise-string-comparison/</guid>
      <description>If you have two strings in R and want to check character-by-character equality:
1 2 3 a &amp;lt;- &amp;#34;abcdef&amp;#34; b &amp;lt;- &amp;#34;abcdff&amp;#34; Reduce(`==`, strsplit(c(a, b), &amp;#34;&amp;#34;)) This results in:
1 2 &amp;gt; Reduce(`==`, strsplit(c(a, b), &amp;#34;&amp;#34;)) [1] TRUE TRUE TRUE TRUE FALSE TRUE </description>
    </item>
    <item>
      <title>Expect_silent and Debugging</title>
      <link>http://errickson.net/blog/posts/expect_silent-and-debugging/</link>
      <pubDate>Tue, 28 Mar 2023 09:27:03 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/expect_silent-and-debugging/</guid>
      <description>When using the testthat package, there is a function, expect_silent(), to ensure no notes, warnings, or errors get produced.
If you are trying to debug this call (either via explicit debug() or inserting a call to browser()), the expect_silent() will suppress all output. Remove the expect_silent() call to properly debug!</description>
    </item>
    <item>
      <title>Eval vs Get</title>
      <link>http://errickson.net/blog/posts/eval-vs-get/</link>
      <pubDate>Mon, 27 Mar 2023 10:14:52 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/eval-vs-get/</guid>
      <description>I&amp;rsquo;ve been fighting damn scoping issues lately and finally sat down to figure out what works and when. Documenting some of them here
The lessons I&amp;rsquo;ve learned from this:
eval(a, envir = ... ) DOES NOT WORK! Instead, do eval(str2lang(&amp;quot;a&amp;quot;), envir = ...) eval.parent(a) DOES NOT WORK! eval.parent(str2lang(&amp;quot;a&amp;quot;)) works and SKIPS GENERIC! get(&amp;quot;a&amp;quot;, envir = ...) seems to always work as expected So to summarize, I think get is always a safer option than eval.</description>
    </item>
    <item>
      <title>A More Sane `yesno()` for devtools</title>
      <link>http://errickson.net/blog/posts/devtools-better-yesno/</link>
      <pubDate>Wed, 22 Mar 2023 13:45:59 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/devtools-better-yesno/</guid>
      <description>Update: There&amp;rsquo;s a better approach in this new post.
When working with devtools, you&amp;rsquo;ll often be asked a yes/no question and get the annoying prompt of three randomly ordered and randomly worded variations of &amp;ldquo;Yes&amp;rdquo; and &amp;ldquo;No&amp;rdquo;, so that you have to think hard to pick the right one. I get what they&amp;rsquo;re trying to do (force you to actually think about the question rather than hitting &amp;ldquo;Y&amp;rdquo; repeatedly) but I find it very annoying.</description>
    </item>
    <item>
      <title>Disable Slidy Click Advance</title>
      <link>http://errickson.net/blog/posts/disable-slidy-click-advance/</link>
      <pubDate>Wed, 22 Mar 2023 13:30:35 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/disable-slidy-click-advance/</guid>
      <description>Slidy presentations in R, by default, advance on mouse-click, which can be frustrating.
Once you have a Slidy presentation loaded, the &amp;ldquo;k&amp;rdquo; key will disable this.
We can disable it more generally by modifying the rmarkdown package you have installed.
Find your rmarkdown installation: 1 system.file(package = &amp;#34;rmarkdown&amp;#34;) Navigate to that directory, then edit the file: rmd/slidy/Slidy2/scripts/slidy.js Find the line that defines mouse_click_enabled (in rmarkdown version 2.20, this is line 55).</description>
    </item>
    <item>
      <title>Subsets and subpopulations in complex survey designs</title>
      <link>http://errickson.net/blog/posts/subpop-complex-survey/</link>
      <pubDate>Wed, 22 Mar 2023 13:20:56 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/subpop-complex-survey/</guid>
      <description>Generally you should not just subset complex survey data to do subpopulation analysis, instead using the built in tools, e.g. Stata&amp;rsquo;s svy, subpop(z): ... or R&amp;rsquo;s subset.survey.design
However, in the following two scenarios, subsetting versus formal subpopulations will give identical results:
The subpopulation are strata. For example, say you stratify by race where race can take on categories &amp;ldquo;white&amp;rdquo;, &amp;ldquo;black&amp;rdquo; and &amp;ldquo;other.. If you want to look at one race (&amp;ldquo;black&amp;rdquo;) (or several races [&amp;ldquo;black&amp;rdquo; and &amp;ldquo;other&amp;rdquo;]), these subpopulations capture one (or several) entire strata.</description>
    </item>
    <item>
      <title>How to Scroll in Tmux</title>
      <link>http://errickson.net/blog/posts/scrolling-in-tmux/</link>
      <pubDate>Wed, 22 Mar 2023 13:09:18 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/scrolling-in-tmux/</guid>
      <description>Ctrl-b then [, then you can use your normal navigation keys to scroll around (eg. Up Arrow or PgDn). Press q or Ctrl-c to quit scroll mode.</description>
    </item>
    <item>
      <title>The Rule of Three</title>
      <link>http://errickson.net/blog/posts/the-rule-of-three/</link>
      <pubDate>Wed, 22 Mar 2023 13:05:25 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/the-rule-of-three/</guid>
      <description>https://en.wikipedia.org/wiki/Rule_of_three_(statistics)
The rule of three states that if a certain event did not occur in a sample with n subjects, the interval from 0 to 3/n is a 95% confidence interval for the rate of occurrences in the population. When n is greater than 30, this is a good approximation of results from more sensitive tests.
Eypasch, Ernst, et al. &amp;ldquo;Probability of adverse events that have not yet occurred: a statistical reminder.</description>
    </item>
    <item>
      <title>Exclude files from git commands</title>
      <link>http://errickson.net/blog/posts/git-exclude-files/</link>
      <pubDate>Wed, 22 Mar 2023 12:59:53 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/git-exclude-files/</guid>
      <description>To exclude files from git commands such as git grep or git diff:
1 2 git grep foobar -- &amp;#39;:!*.java&amp;#39; git diff -- &amp;#39;:!*.html&amp;#39; &amp;#39;:!abc.csv&amp;#39; Works for whole folders as well.</description>
    </item>
    <item>
      <title>Color by Significance in R&#39;s `forestplot`</title>
      <link>http://errickson.net/blog/posts/forestplot-color-by-significance/</link>
      <pubDate>Wed, 22 Mar 2023 12:44:42 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/forestplot-color-by-significance/</guid>
      <description>The forestplot package doesn&amp;rsquo;t easily support advanced coloring of each point, specifically to flag significance levels.
It does however supported custom coloring via a moderately complicated custom function, so here&amp;rsquo;s an example of how to color by significance.
First, create the following function:
1 2 3 4 5 6 7 8 9 10 11 12 fn &amp;lt;- local({ i &amp;lt;- 0 clrs &amp;lt;- ifelse(dat$pv &amp;lt; .05, &amp;#34;darkgreen&amp;#34;, -ifelse(dat$pv &amp;lt; .1, &amp;#34;blue&amp;#34;, &amp;#34;darkgrey&amp;#34;)) function(.</description>
    </item>
    <item>
      <title>Increase ALL Text Size in ggplot</title>
      <link>http://errickson.net/blog/posts/ggplot-increase-all-text-size/</link>
      <pubDate>Wed, 22 Mar 2023 12:04:41 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/ggplot-increase-all-text-size/</guid>
      <description>You can add
1 + theme(text = element_text(size=20)) to a ggplot object to modify the size of ALL text elements.
(This is with ggplot 3.4.1 in case they change the API again.)</description>
    </item>
    <item>
      <title>Ignore whitespace on Git diffs</title>
      <link>http://errickson.net/blog/posts/git_ignore_whitespace/</link>
      <pubDate>Wed, 22 Mar 2023 10:38:51 -0400</pubDate>
      <guid>http://errickson.net/blog/posts/git_ignore_whitespace/</guid>
      <description>By default, git&amp;rsquo;s diff (git diff or on Github) show whitespace changes as well as meaningful changes.
To suppress them in git diff, add the -b flag:
git diff -b To suppress on github.com, append ?w=1 to any diff&amp;rsquo;s URL.</description>
    </item>
  </channel>
</rss>
